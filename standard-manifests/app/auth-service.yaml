apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: cfx
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: url-shortener
data:
  PORT: "8080"
  DB_PATH: "/data/auth.db"
  JWT_EXPIRY: "24h"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: cfx
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: url-shortener
type: Opaque
data:
  ADMIN_USERNAME: YWRtaW4= # base64 encoded 'admin'
  ADMIN_PASSWORD: YWRtaW4xMjM= # base64 encoded 'admin123'
  JWT_SECRET: eW91cl9zdXBlcl9zZWNyZXRfa2V5X2NoYW5nZV90aGlzX2luX3Byb2R1Y3Rpb24= # base64 encoded default value
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: cfx
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: url-shortener
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/part-of: url-shortener
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: auth-service
        image: docker.io/billyvande7/auth-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: auth-service-config
        - secretRef:
            name: auth-service-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: auth-data
          mountPath: /data
      volumes:
      - name: auth-data
        persistentVolumeClaim:
          claimName: auth-service-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: cfx
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: url-shortener
spec:
  selector:
    app.kubernetes.io/name: auth-service
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-service-pvc
  namespace: cfx
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: url-shortener
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
