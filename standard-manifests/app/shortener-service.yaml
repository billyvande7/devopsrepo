apiVersion: v1
kind: ConfigMap
metadata:
  name: shortener-service-config
  namespace: cfx
  labels:
    app.kubernetes.io/name: shortener-service
    app.kubernetes.io/part-of: url-shortener
data:
  NODE_ENV: "production"
  PORT: "3000"
  AUTH_SERVICE_URL: "http://auth-service.cfx.svc.cluster.local:8080"
  BASE_URL: "http://shortener-service.cfx.svc.cluster.local:3000"
---
apiVersion: v1
kind: Secret
metadata:
  name: shortener-service-secrets
  namespace: cfx
  labels:
    app.kubernetes.io/name: shortener-service
    app.kubernetes.io/part-of: url-shortener
type: Opaque
data:
  JWT_SECRET: eW91cl9qd3Rfc2VjcmV0X2hlcmU= # base64 encoded 'your_jwt_secret_here'
  JWT_EXPIRATION: MjRo # base64 encoded '24h'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shortener-service
  namespace: cfx
  labels:
    app.kubernetes.io/name: shortener-service
    app.kubernetes.io/part-of: url-shortener
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: shortener-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: shortener-service
        app.kubernetes.io/part-of: url-shortener
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      initContainers:
      - name: init-data-dir
        image: busybox:1.36
        command: ['sh', '-c']
        args:
          - |
            mkdir -p /usr/src/app/data && 
            touch /usr/src/app/data/.init && 
            chown -R 1000:1000 /usr/src/app
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: shortener-data
          mountPath: /usr/src/app/data
      containers:
      - name: shortener-service
        image: docker.io/billyvande7/shortener-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: shortener-service-config
        - secretRef:
            name: shortener-service-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        startupProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 30
          periodSeconds: 10
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: shortener-data
          mountPath: /usr/src/app/data
      volumes:
      - name: shortener-data
        persistentVolumeClaim:
          claimName: shortener-service-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: shortener-service
  namespace: cfx
  labels:
    app.kubernetes.io/name: shortener-service
    app.kubernetes.io/part-of: url-shortener
spec:
  selector:
    app.kubernetes.io/name: shortener-service
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shortener-service-pvc
  namespace: cfx
  labels:
    app.kubernetes.io/name: shortener-service
    app.kubernetes.io/part-of: url-shortener
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
